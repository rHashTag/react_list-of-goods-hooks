{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","goods","useState","isVisible","setIsVisible","isReversed","setIsReversed","none","isSortedBy","setIsSortedBy","name","sort","good1","good2","localeCompare","length","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAgBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,eAAAA,I,oBAAAA,M,KAML,IA8FeE,EA9FO,WACpB,IAAIC,EAAK,UAAOF,GAEhB,EAAkCG,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAoCJ,mBAASJ,EAAOS,MAApD,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,OAAQD,GACN,KAAKV,EAAOY,KACVT,EAAMU,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAME,cAAcD,MAClD,MAEF,KAAKf,EAAOiB,OACVd,EAAMU,MAAK,SAACC,EAAOC,GAAR,OAAmBD,EAAMG,OAASF,EAAME,UACnD,MAEF,QACEd,EAAK,YAAOA,GAOhB,OAJII,GACFJ,EAAMe,UAIN,sBAAKC,UAAU,gCAAf,UACE,gCACE,oBAAIA,UAAU,QAAd,oBAEEd,GACA,wBACEc,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMf,GAAa,IAH9B,sBAUHD,GACC,sBAAKc,UAAU,GAAf,UACE,sBAAKA,UAAU,YAAf,UACE,wBACEA,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMb,GAAeD,IAHhC,qBAQA,wBACEY,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMV,EAAcX,EAAOY,OAHtC,iCAQA,wBACEO,UAAU,SACVC,KAAK,SACLC,QAAS,WACPb,GAAc,GACdG,EAAcX,EAAOS,OALzB,mBAWA,wBACEU,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMV,EAAcX,EAAOiB,SAHtC,+BASF,qBAAKE,UAAU,6BAAf,SACE,6BACGhB,EAAMmB,KAAI,SAACC,GAAD,OACT,6BACGA,kBCtGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.90842ca4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  none,\n  name,\n  length,\n}\n\nconst App: React.FC = () => {\n  let goods = [...goodsFromServer];\n\n  const [isVisible, setIsVisible] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [isSortedBy, setIsSortedBy] = useState(SortBy.none);\n\n  switch (isSortedBy) {\n    case SortBy.name:\n      goods.sort((good1, good2) => (good1.localeCompare(good2)));\n      break;\n\n    case SortBy.length:\n      goods.sort((good1, good2) => (good1.length - good2.length));\n      break;\n\n    default:\n      goods = [...goods];\n  }\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"App container is-max-desktop \">\n      <div>\n        <h1 className=\"title\">Goods</h1>\n\n        {!isVisible && (\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={() => setIsVisible(true)}\n          >\n            Start\n          </button>\n        )}\n      </div>\n\n      {isVisible && (\n        <div className=\"\">\n          <div className=\"field box\">\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setIsReversed(!isReversed)}\n            >\n              Reverse\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setIsSortedBy(SortBy.name)}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                setIsReversed(false);\n                setIsSortedBy(SortBy.none);\n              }}\n            >\n              Reset\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setIsSortedBy(SortBy.length)}\n            >\n              Sort by length\n            </button>\n          </div>\n\n          <div className=\"content is-medium tile box\">\n            <ul>\n              {goods.map((good) => (\n                <li>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}